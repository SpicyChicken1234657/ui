-- AscensionHub.lua
-- UI Library for Executors: enhanced styling, toggle/close/minimize, persistence, dynamic theming, callbacks

local AscensionHub = {}
AscensionHub.__index = AscensionHub

-- Services
local TweenService    = game:GetService("TweenService")
local UserInputService= game:GetService("UserInputService")
local Players         = game:GetService("Players")
local HttpService     = game:GetService("HttpService")
local LocalPlayer     = Players.LocalPlayer
local RunService      = game:GetService("RunService")

-- Default Theme
AscensionHub.Theme = {
    Background      = { Color = Color3.fromRGB(20,20,30), Transparency = 0.15 },
    TitleBar        = { Color = Color3.fromRGB(35,35,55), Transparency = 0.1 },
    Accent          = Color3.fromRGB(0,170,255),
    Text            = Color3.fromRGB(240,240,255),
    Button          = { Color = Color3.fromRGB(40,40,60), Transparency = 0.2 },
    Font            = Enum.Font.GothamBold,
    CornerRadius    = UDim.new(0,12)
}

-- Settings
AscensionHub.Settings = {
    Animations = { Enabled = true, Speed = 0.2, Ripple = true },
    Hotkey     = Enum.KeyCode.RightShift,
    SaveKey    = "AscensionHubState"
}

-- Utility
local function applyCorner(obj)
    local c = Instance.new("UICorner") c.CornerRadius = AscensionHub.Theme.CornerRadius c.Parent = obj
end
local function makeGradient(obj, a, b)
    local g = Instance.new("UIGradient") g.Color = ColorSequence.new(a, b) g.Parent = obj
end
local function rippleEffect(btn)
    if not AscensionHub.Settings.Animations.Ripple then return end
    local r = Instance.new("ImageLabel")
    r.Image = "rbxassetid://5028857472"; r.ImageColor3 = AscensionHub.Theme.Accent
    r.AnchorPoint = Vector2.new(0.5,0.5); r.Position = UDim2.new(0.5,0,0.5,0)
    r.Size = UDim2.new(0,0,0,0); r.BackgroundTransparency = 1; r.ZIndex = btn.ZIndex+1; r.Parent = btn
    local tw = TweenService:Create(r, TweenInfo.new(0.4,Enum.EasingStyle.Quad), {Size = UDim2.new(2,0,2,0), ImageTransparency = 0.8})
    tw:Play(); tw.Completed:Connect(function() r:Destroy() end)
end
local function safe(fn,...)
    local ok,err = pcall(fn, ...)
    if not ok then warn("AscensionHub callback error:", err) end
end

-- Persistence
function AscensionHub:SaveState(tbl)
    local json = HttpService:JSONEncode(tbl)
    LocalPlayer:SetAttribute(AscensionHub.Settings.SaveKey, json)
end
function AscensionHub:LoadState()
    local attr = LocalPlayer:GetAttribute(AscensionHub.Settings.SaveKey)
    if attr then
        local ok,data = pcall(HttpService.JSONDecode, HttpService, attr)
        if ok then return data end
    end
    return {}
end

-- Create Window
function AscensionHub:CreateWindow(title)
    local win = setmetatable({Tabs = {}, State = self:LoadState()}, {__index = AscensionHub.Window})
    -- ScreenGui + Toggle
    local gui = Instance.new("ScreenGui") gui.Name = "AscensionHub"..title gui.ResetOnSpawn = false gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    win.ScreenGui = gui
    gui.Enabled = true
    UserInputService.InputBegan:Connect(function(i)
        if i.KeyCode == AscensionHub.Settings.Hotkey then gui.Enabled = not gui.Enabled end
    end)
    -- Main Frame
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0,550,0,420); main.Position = UDim2.new(0.5,-275,0.5,-210)
    main.BackgroundColor3 = AscensionHub.Theme.Background.Color
    main.BackgroundTransparency = AscensionHub.Theme.Background.Transparency
    main.ClipsDescendants = true; main.Parent = gui; applyCorner(main)
    makeGradient(main, Color3.fromRGB(25,25,35), Color3.fromRGB(15,15,25))
    win.Main = main
    -- Title Bar
    local bar = Instance.new("Frame") bar.Size = UDim2.new(1,0,0,48)
    bar.BackgroundColor3 = AscensionHub.Theme.TitleBar.Color
    bar.BackgroundTransparency = AscensionHub.Theme.TitleBar.Transparency
    bar.Parent = main; applyCorner(bar); makeGradient(bar, Color3.fromRGB(45,45,65), Color3.fromRGB(35,35,55))
    -- Title Label
    local label = Instance.new("TextLabel") label.Text = "üöÄ "..title
    label.Font = AscensionHub.Theme.Font; label.TextSize=20; label.TextColor3=AscensionHub.Theme.Text
    label.BackgroundTransparency=1; label.Size=UDim2.new(1,-140,1,0); label.Position=UDim2.new(0,12,0,0); label.Parent=bar
    -- Close/Minimize
    local close = Instance.new("ImageButton") close.Image="rbxassetid://3926307971"
    close.ImageRectOffset=Vector2.new(924,724); close.ImageRectSize=Vector2.new(36,36)
    close.Size=UDim2.new(0,32,0,32); close.Position=UDim2.new(1,-40,0,8)
    close.BackgroundTransparency=1; close.Parent=bar
    local mini = close:Clone(); mini.Position=UDim2.new(1,-80,0,8);
    mini.ImageRectOffset=Vector2.new(764,724)
    mini.Parent=bar
    close.MouseButton1Click:Connect(function() gui:Destroy() end)
    mini.MouseButton1Click:Connect(function()
        main.Visible = not main.Visible
    end)
    -- Dragging
    do
        local dragging, start, pos
        bar.InputBegan:Connect(function(inp)
            if inp.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true; start=inp.Position; pos=main.Position end
        end)
        bar.InputChanged:Connect(function(inp)
            if dragging and inp.UserInputType==Enum.UserInputType.MouseMovement then
                local delta=inp.Position-start
                main.Position=UDim2.new(pos.X.Scale, pos.X.Offset+delta.X, pos.Y.Scale, pos.Y.Offset+delta.Y)
            end
        end)
        bar.InputEnded:Connect(function(inp) if inp.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    end
    -- Containers
    local tabbar = Instance.new("Frame") tabbar.Size=UDim2.new(0,140,1, -48); tabbar.Position=UDim2.new(0,0,0,48)
    tabbar.BackgroundTransparency=1; tabbar.Parent=main
    win.TabBar = tabbar
    local content = Instance.new("Frame") content.Size=UDim2.new(1,-140,1,-48)
    content.Position=UDim2.new(0,140,0,48); content.BackgroundTransparency=0.2; content.Parent=main; applyCorner(content)
    win.Content = content
    return win
end

-- Window Methods
AscensionHub.Window = {} AscensionHub.Window.__index = AscensionHub.Window
function AscensionHub.Window:SetTheme(t)
    self.Theme = t -- TODO: apply to existing elements
end
function AscensionHub.Window:CreateTab(name)
    local tab = setmetatable({Elements={}, Parent=self}, {__index=AscensionHub.Tab})
    -- Tab Button
    local btn=Instance.new("TextButton"); btn.Text="üéõÔ∏è "..name; btn.Font=self.Parent.Theme.Font
    btn.TextSize=16; btn.TextColor3=self.Parent.Theme.Text
    btn.BackgroundColor3=self.Parent.Theme.Button.Color; btn.BackgroundTransparency=self.Parent.Theme.Button.Transparency
    btn.Size=UDim2.new(1,-12,0,36); btn.Position=UDim2.new(0,6,0,#self.Tabs*44+6)
    applyCorner(btn); btn.Parent=self.TabBar
    -- Content Frame
    local fr=Instance.new("Frame"); fr.Size=UDim2.new(1,-12,1,-12); fr.Position=UDim2.new(0,6,0,6)
    fr.BackgroundTransparency=0.3; fr.Visible=(#self.Tabs==0); fr.Parent=self.Content; applyCorner(fr)
    makeGradient(fr, Color3.fromRGB(30,30,40), Color3.fromRGB(20,20,30))
    btn.MouseButton1Click:Connect(function()
        for _,t in ipairs(self.Tabs) do t.Content.Visible=false end
        fr.Visible=true; safe(function() btn.BackgroundColor3=self.Parent.Theme.Accent end)
        safe(function() btn.TextColor3=self.Parent.Theme.Text end)
    end)
    tab.Button=btn; tab.Content=fr; table.insert(self.Tabs, tab)
    return tab
end

-- Tab Methods
AscensionHub.Tab = {} AscensionHub.Tab.__index = AscensionHub.Tab
function AscensionHub.Tab:CreateButton(txt,cb)
    local b=Instance.new("TextButton"); b.Text=txt; b.Font=self.Parent.Theme.Font; b.TextSize=14
    b.TextColor3=self.Parent.Theme.Text; b.BackgroundColor3=self.Parent.Theme.Button.Color
    b.BackgroundTransparency=self.Parent.Theme.Button.Transparency; b.Size=UDim2.new(0,200,0,28)
    b.Position=UDim2.new(0,6,0,#self.Elements*34+6); applyCorner(b); b.Parent=self.Content
    b.MouseButton1Click:Connect(function() rippleEffect(b); safe(cb) end)
    table.insert(self.Elements,b); return b
end
--... Additional controls (slider, dropdown, toggle, input, color) would follow same pattern.

return AscensionHub
