-- AscensionHub.lua
-- Comprehensive UI library with enhanced features: dropdowns, toggles, text input, color picker, persistent state, dynamic theming, accessibility, and error-safe callbacks

local AscensionHub = {}
AscensionHub.__index = AscensionHub

-- Services
local TweenService         = game:GetService("TweenService")
local UserInputService     = game:GetService("UserInputService")
local Players              = game:GetService("Players")
local HttpService          = game:GetService("HttpService")
local LocalPlayer          = Players.LocalPlayer

-- Default Theme (Glassmorphism + Gradients)
AscensionHub.Theme = {
    WindowBackground = { Color = Color3.fromRGB(25,25,35), Transparency = 0.2 },
    TitleBarColor    = { Color = Color3.fromRGB(40,40,60), Transparency = 0.15 },
    AccentColor      = Color3.fromRGB(0,150,255),
    TextColor        = Color3.fromRGB(230,230,245),
    ButtonColor      = { Color = Color3.fromRGB(50,50,70), Transparency = 0.2 },
    Font             = Enum.Font.GothamBold,
    ShadowColor      = Color3.fromRGB(0,0,0),
    CornerRadius     = UDim.new(0,10)
}

-- Settings + State
AscensionHub.Settings = {
    Animations   = { Enabled = true, Tween = true, Ripple = true },
    AnimationSpeed = 0.25,
    ScaleFactor    = 1.0,
    Accessibility  = { FontSizeScale = 1.0, HighContrast = false },
    SaveKey        = "AscensionHub_UIState"
}

-- Utility Functions
local function createGradient(frame,color1,color2)
    local grad = Instance.new("UIGradient")
    grad.Color = ColorSequence.new(color1,color2)
    grad.Parent = frame
end

local function applyCornerRadius(obj)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = AscensionHub.Theme.CornerRadius
    corner.Parent = obj
end

local function safeCallback(fn,...)
    local ok, err = pcall(fn,...)
    if not ok then warn("AscensionHub callback error:", err) end
end

local function createRipple(button)
    if not AscensionHub.Settings.Animations.Ripple then return end
    local ripple = Instance.new("ImageLabel")
    ripple.Image = "rbxassetid://5028857472"
    ripple.ImageColor3 = AscensionHub.Theme.AccentColor
    ripple.Size = UDim2.new(0,0,0,0)
    ripple.Position = UDim2.new(0.5,0,0.5,0)
    ripple.AnchorPoint = Vector2.new(0.5,0.5)
    ripple.BackgroundTransparency = 1
    ripple.ZIndex = button.ZIndex + 1
    ripple.Parent = button
    if AscensionHub.Settings.Animations.Tween then
        local tween = TweenService:Create(ripple, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(2,0,2,0), ImageTransparency = 0.8
        })
        tween:Play()
        tween.Completed:Connect(function() ripple:Destroy() end)
    else
        ripple:Destroy()
    end
end

-- Persistent State
function AscensionHub:SaveState(stateTbl)
    local json = HttpService:JSONEncode(stateTbl)
    LocalPlayer:SetAttribute(AscensionHub.Settings.SaveKey, json)
end

function AscensionHub:LoadState()
    local json = LocalPlayer:GetAttribute(AscensionHub.Settings.SaveKey)
    if json then
        local ok, tbl = pcall(function() return HttpService:JSONDecode(json) end)
        if ok then return tbl end
    end
    return {}
end

-- Window Creation
function AscensionHub:CreateWindow(title, customTheme)
    local window = setmetatable({}, {__index = AscensionHub.Window})
    window.Title  = title
    window.Tabs   = {}
    window.Theme  = customTheme or AscensionHub.Theme
    window.State  = self:LoadState()

    -- ScreenGui
    local gui = Instance.new("ScreenGui") gui.Name = "AscensionHub_"..title gui.Parent = LocalPlayer:WaitForChild("PlayerGui") gui.ResetOnSpawn = false
    window.ScreenGui = gui

    -- Main Frame
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0,500*AscensionHub.Settings.ScaleFactor,0,400*AscensionHub.Settings.ScaleFactor)
    main.Position = UDim2.new(0.5,-250*AscensionHub.Settings.ScaleFactor,0.5,-200*AscensionHub.Settings.ScaleFactor)
    main.BackgroundColor3 = window.Theme.WindowBackground.Color
    main.BackgroundTransparency = window.Theme.WindowBackground.Transparency
    main.ClipsDescendants = true
    main.Parent = gui
    applyCornerRadius(main)
    createGradient(main, Color3.fromRGB(30,30,45), Color3.fromRGB(20,20,30))
    window.MainFrame = main

    -- Shadow
    local shadow = Instance.new("ImageLabel") shadow.Image = "rbxassetid://1316045217" shadow.ImageColor3 = window.Theme.ShadowColor shadow.ImageTransparency = 0.6
    shadow.Size = UDim2.new(1,60*AscensionHub.Settings.ScaleFactor,1,60*AscensionHub.Settings.ScaleFactor)
    shadow.Position = UDim2.new(0,-30*AscensionHub.Settings.ScaleFactor,0,-30*AscensionHub.Settings.ScaleFactor)
    shadow.BackgroundTransparency = 1 shadow.Parent = main

    -- Title Bar
    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(1,0,0,50*AscensionHub.Settings.ScaleFactor)
    bar.BackgroundColor3 = window.Theme.TitleBarColor.Color
    bar.BackgroundTransparency = window.Theme.TitleBarColor.Transparency
    bar.Parent = main
    applyCornerRadius(bar)
    createGradient(bar, Color3.fromRGB(50,50,70), Color3.fromRGB(40,40,60))

    -- Title
    local lbl = Instance.new("TextLabel")
    lbl.Text = "ðŸŒŒ "..title
    lbl.TextColor3 = window.Theme.TextColor
    lbl.Font = window.Theme.Font
    lbl.TextSize = 18*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    lbl.Size = UDim2.new(1,-120*AscensionHub.Settings.ScaleFactor,1,0)
    lbl.Position = UDim2.new(0,15*AscensionHub.Settings.ScaleFactor,0,0)
    lbl.BackgroundTransparency = 1 lbl.Parent = bar

    -- Close
    local close = Instance.new("TextButton")
    close.Text = "âœ–" close.TextColor3 = Color3.fromRGB(255,100,100)
    close.BackgroundColor3 = Color3.fromRGB(80,20,20)
    close.Size = UDim2.new(0,40*AscensionHub.Settings.ScaleFactor,0,40*AscensionHub.Settings.ScaleFactor)
    close.Position = UDim2.new(1,-45*AscensionHub.Settings.ScaleFactor,0,5*AscensionHub.Settings.ScaleFactor)
    close.Font = window.Theme.Font
    close.TextSize = 20*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    applyCornerRadius(close) close.Parent = bar
    close.MouseButton1Click:Connect(function()
        if AscensionHub.Settings.Animations.Tween then
            local t=TweenService:Create(main, TweenInfo.new(AscensionHub.Settings.AnimationSpeed,Enum.EasingStyle.Back),{Size=UDim2.new(0,0,0,0),Position=UDim2.new(0.5,0,0.5,0)})
            t:Play(); t.Completed:Wait()
        end; gui:Destroy()
    end)

    -- Containers
    local tabCont = Instance.new("Frame")
    tabCont.Size = UDim2.new(0,130*AscensionHub.Settings.ScaleFactor,1,-50*AscensionHub.Settings.ScaleFactor)
    tabCont.Position = UDim2.new(0,0,0,50*AscensionHub.Settings.ScaleFactor)
    tabCont.BackgroundTransparency = 1 tabCont.Parent = main window.TabContainer = tabCont

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1,-130*AscensionHub.Settings.ScaleFactor,1,-50*AscensionHub.Settings.ScaleFactor)
    content.Position = UDim2.new(0,130*AscensionHub.Settings.ScaleFactor,0,50*AscensionHub.Settings.ScaleFactor)
    content.BackgroundTransparency = AscensionHub.Settings.Accessibility.HighContrast and 0 or 0.3
    content.Parent = main; applyCornerRadius(content)
    createGradient(content, Color3.fromRGB(30,30,50), Color3.fromRGB(20,20,40))
    window.ContentFrame = content

    -- Drag
    local dragging, startPos, startDrag
    bar.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true; startPos=i.Position; startDrag=main.Position end
    end)
    bar.InputChanged:Connect(function(i)
        if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
            local delta=i.Position-startPos
            main.Position=UDim2.new(startDrag.X.Scale,startDrag.X.Offset+delta.X,startDrag.Y.Scale,startDrag.Y.Offset+delta.Y)
        end
    end)
    bar.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)

    return window
end

-- Window Methods
AscensionHub.Window = {}
AscensionHub.Window.__index = AscensionHub.Window

function AscensionHub.Window:SetTheme(newTheme)
    self.Theme=newTheme
    -- TODO: reapply theme to existing UI elements
end

function AscensionHub.Window:CreateTab(name)
    local tab=setmetatable({}, {__index=AscensionHub.Tab})
    tab.Name=name; tab.Elements={}; tab.Theme=self.Theme; tab.Parent=self

    -- Tab Button
    local btn=Instance.new("TextButton")
    btn.Text = "ðŸ”§ "..name
    btn.TextColor3 = self.Theme.TextColor
    btn.BackgroundColor3=self.Theme.ButtonColor.Color
    btn.BackgroundTransparency=self.Theme.ButtonColor.Transparency
    btn.Size=UDim2.new(1,-10*AscensionHub.Settings.ScaleFactor,0,45*AscensionHub.Settings.ScaleFactor)
    btn.Position=UDim2.new(0,5*AscensionHub.Settings.ScaleFactor,0,#self.Tabs*50*AscensionHub.Settings.ScaleFactor)
    btn.Font=self.Theme.Font; btn.TextSize=16*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    applyCornerRadius(btn); btn.Parent=self.TabContainer

    -- Content Frame
    local cont=Instance.new("Frame")
    cont.Size=UDim2.new(1,-10*AscensionHub.Settings.ScaleFactor,1,-10*AscensionHub.Settings.ScaleFactor)
    cont.Position=UDim2.new(0,5*AscensionHub.Settings.ScaleFactor,0,5*AscensionHub.Settings.ScaleFactor)
    cont.BackgroundTransparency=0.4; applyCornerRadius(cont)
    createGradient(cont,Color3.fromRGB(35,35,55),Color3.fromRGB(25,25,45))
    cont.Parent=self.ContentFrame; cont.Visible=(#self.Tabs==0)

    -- Highlight
    local function updateHighlight()
        for _,t in ipairs(self.Tabs) do
            t.Button.BorderSizePixel=0
            t.Button.BackgroundColor3=self.Theme.ButtonColor.Color
            t.Button.BackgroundTransparency=self.Theme.ButtonColor.Transparency
        end
        btn.BorderSizePixel=2; btn.BorderColor3=self.Theme.AccentColor
        btn.BackgroundColor3=self.Theme.AccentColor; btn.BackgroundTransparency=0.1
    end

    btn.MouseButton1Click:Connect(function()
        for _,t in ipairs(self.Tabs) do t.Content.Visible=false end
        cont.Visible=true
        if AscensionHub.Settings.Animations.Tween then safeCallback(updateHighlight) else updateHighlight() end
    end)

    tab.Button=btn; tab.Content=cont; table.insert(self.Tabs,tab)
    if #self.Tabs==1 then updateHighlight() end
    return tab
end

-- Tab Methods
AscensionHub.Tab={}; AscensionHub.Tab.__index=AscensionHub.Tab

-- Button
function AscensionHub.Tab:CreateButton(text,callback)
    local btn=Instance.new("TextButton")
    btn.Text="â–¶ "..text; btn.TextColor3=self.Theme.TextColor
    btn.BackgroundColor3=self.Theme.ButtonColor.Color; btn.BackgroundTransparency=self.Theme.ButtonColor.Transparency
    btn.Size=UDim2.new(0,220*AscensionHub.Settings.ScaleFactor,0,45*AscensionHub.Settings.ScaleFactor)
    btn.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*50*AscensionHub.Settings.ScaleFactor)
    btn.Font=self.Theme.Font; btn.TextSize=16*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    applyCornerRadius(btn); btn.Parent=self.Content
    btn.MouseEnter:Connect(function() if AscensionHub.Settings.Animations.Tween then TweenService:Create(btn,TweenInfo.new(AscensionHub.Settings.AnimationSpeed,Enum.EasingStyle.Quad),{BackgroundColor3=self.Theme.AccentColor,BackgroundTransparency=0.15}):Play() end end)
    btn.MouseLeave:Connect(function() if AscensionHub.Settings.Animations.Tween then TweenService:Create(btn,TweenInfo.new(AscensionHub.Settings.AnimationSpeed,Enum.EasingStyle.Quad),{BackgroundColor3=self.Theme.ButtonColor.Color,BackgroundTransparency=self.Theme.ButtonColor.Transparency}):Play() end end)
    btn.MouseButton1Click:Connect(function() createRipple(btn); safeCallback(callback) end)
    table.insert(self.Elements,btn)
    return {SetText=function(t) btn.Text="â–¶ "..t end, SetVisible=function(v) btn.Visible=v end}
end

-- Slider
function AscensionHub.Tab:CreateSlider(text,min,max,default,callback)
    local frame=Instance.new("Frame"); frame.Size=UDim2.new(0,250*AscensionHub.Settings.ScaleFactor,0,50*AscensionHub.Settings.ScaleFactor)
    frame.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*55*AscensionHub.Settings.ScaleFactor)
    frame.BackgroundTransparency=1; frame.Parent=self.Content

    local label=Instance.new("TextLabel"); label.Text=text..": "..default; label.TextColor3=self.Theme.TextColor
    label.Font=self.Theme.Font; label.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    label.Size=UDim2.new(1,0,0,20); label.BackgroundTransparency=1; label.Parent=frame

    local track=Instance.new("Frame"); track.Size=UDim2.new(1,0,0,15); track.Position=UDim2.new(0,0,0,25)
    track.BackgroundColor3=self.Theme.ButtonColor.Color; track.BackgroundTransparency=self.Theme.ButtonColor.Transparency+0.2
    applyCornerRadius(track); track.Parent=frame

    local fill=Instance.new("Frame"); fill.Size=UDim2.new((default-min)/(max-min),0,1,0)
    fill.BackgroundColor3=self.Theme.AccentColor; applyCornerRadius(fill); fill.Parent=track

    local dragging=false
    track.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true end end)
    track.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    UserInputService.InputChanged:Connect(function(i)
        if dragging and (i.UserInputType==Enum.UserInputType.MouseMovement) then
            local mx,tx= i.Position.X, track.AbsolutePosition.X
            local rel=math.clamp((mx-tx)/track.AbsoluteSize.X,0,1)
            local val=min+(max-min)*rel; fill.Size=UDim2.new(rel,0,1,0)
            label.Text=text..": "..math.floor(val)
            safeCallback(callback,val)
        end
    end)

    table.insert(self.Elements,frame)
    return {SetValue=function(v) local r=(v-min)/(max-min); fill.Size=UDim2.new(r,0,1,0); label.Text=text..": "..math.floor(v) end}
end

-- Dropdown
function AscensionHub.Tab:CreateDropdown(text,options,callback)
    local frame=Instance.new("Frame"); frame.Size=UDim2.new(0,250*AscensionHub.Settings.ScaleFactor,0,50*AscensionHub.Settings.ScaleFactor)
    frame.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*55*AscensionHub.Settings.ScaleFactor); frame.BackgroundTransparency=1; frame.Parent=self.Content

    local selected=Instance.new("TextButton")
    selected.Text="â–¼ "..text..": "..options[1]
    selected.TextColor3=self.Theme.TextColor; selected.BackgroundColor3=self.Theme.ButtonColor.Color
    selected.BackgroundTransparency=self.Theme.ButtonColor.Transparency
    selected.Font=self.Theme.Font; selected.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    selected.Size=UDim2.new(1,0,0,50*AscensionHub.Settings.ScaleFactor); applyCornerRadius(selected); selected.Parent=frame

    local optionFrame=Instance.new("ScrollingFrame")
    optionFrame.Size=UDim2.new(1,0,0,0); optionFrame.Position=UDim2.new(0,0,0,50*AscensionHub.Settings.ScaleFactor)
    optionFrame.BackgroundColor3=self.Theme.ButtonColor.Color; optionFrame.BackgroundTransparency=self.Theme.ButtonColor.Transparency+0.1
    applyCornerRadius(optionFrame); optionFrame.ClipsDescendants=true; optionFrame.AutomaticCanvasSize="Y"
    optionFrame.ScrollBarThickness=6; optionFrame.Parent=frame; optionFrame.Visible=false

    local open=false
    selected.MouseButton1Click:Connect(function()
        open=not open
        local target=#options*40*AscensionHub.Settings.ScaleFactor
        if AscensionHub.Settings.Animations.Tween then
            TweenService:Create(optionFrame,TweenInfo.new(AscensionHub.Settings.AnimationSpeed,Enum.EasingStyle.Elastic),{Size=UDim2.new(1,0,0,open and target or 0)}):Play()
        else
            optionFrame.Size=UDim2.new(1,0,0,open and target or 0)
        end; optionFrame.Visible=open
    end)

    for i,opt in ipairs(options) do
        local btn=Instance.new("TextButton")
        btn.Text="âž¤ "..opt; btn.TextColor3=self.Theme.TextColor
        btn.BackgroundColor3=self.Theme.ButtonColor.Color; btn.BackgroundTransparency=self.Theme.ButtonColor.Transparency+0.2
        btn.Font=self.Theme.Font; btn.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
        btn.Size=UDim2.new(1,-10*AscensionHub.Settings.ScaleFactor,0,40*AscensionHub.Settings.ScaleFactor)
        btn.Position=UDim2.new(0,5*AscensionHub.Settings.ScaleFactor,0,(i-1)*40*AscensionHub.Settings.ScaleFactor)
        applyCornerRadius(btn); btn.Parent=optionFrame
        btn.MouseButton1Click:Connect(function()
            selected.Text="â–¼ "..text..": "..opt
            open=false; optionFrame.Visible=false; optionFrame.Size=UDim2.new(1,0,0,0)
            safeCallback(callback,opt)
        end)
    end

    table.insert(self.Elements,frame)
    return {SetSelected=function(s) selected.Text="â–¼ "..text..": "..s end}
end

-- Toggle (Switch)
function AscensionHub.Tab:CreateToggle(text,default,callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(0,250*AscensionHub.Settings.ScaleFactor,0,50*AscensionHub.Settings.ScaleFactor)
    frame.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*55*AscensionHub.Settings.ScaleFactor)
    frame.BackgroundTransparency=1; frame.Parent=self.Content

    local label=Instance.new("TextLabel") label.Text=text; label.TextColor3=self.Theme.TextColor
    label.Font=self.Theme.Font; label.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    label.Size=UDim2.new(0.7,0,1,0); label.BackgroundTransparency=1; label.Parent=frame

    local button=Instance.new("TextButton")
    button.Size=UDim2.new(0.3,0,0.6,0); button.Position=UDim2.new(0.7,0,0.2,0)
    applyCornerRadius(button)
    local function update(state)
        button.BackgroundColor3= state and self.Theme.AccentColor or self.Theme.ButtonColor.Color
        button.BackgroundTransparency= state and 0 or self.Theme.ButtonColor.Transparency
        button.Text=state and "ON" or "OFF"
    end
    local state=default
    update(state)
    button.MouseButton1Click:Connect(function()
        state = not state; update(state)
        safeCallback(callback,state)
    end)

    table.insert(self.Elements,frame)
    return {SetState=function(s) state=s; update(s) end}
end

-- Text Input
function AscensionHub.Tab:CreateInput(text,placeholder,callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(0,250*AscensionHub.Settings.ScaleFactor,0,50*AscensionHub.Settings.ScaleFactor)
    frame.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*55*AscensionHub.Settings.ScaleFactor)
    frame.BackgroundTransparency=1 frame.Parent=self.Content

    local label=Instance.new("TextLabel") label.Text=text; label.TextColor3=self.Theme.TextColor
    label.Font=self.Theme.Font; label.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    label.Size=UDim2.new(0.4,0,1,0); label.BackgroundTransparency=1; label.Parent=frame

    local box=Instance.new("TextBox")
    box.PlaceholderText=placeholder; box.Text=""
    box.TextColor3=self.Theme.TextColor; box.Font=self.Theme.Font
    box.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    box.Size=UDim2.new(0.6,-5*AscensionHub.Settings.ScaleFactor,0.8,0)
    box.Position=UDim2.new(0.4,5*AscensionHub.Settings.ScaleFactor,0.1,0)
    box.BackgroundColor3=self.Theme.ButtonColor.Color; box.BackgroundTransparency=self.Theme.ButtonColor.Transparency
    applyCornerRadius(box); box.Parent=frame

    box.FocusLost:Connect(function(enter)
        if enter then safeCallback(callback,box.Text) end
    end)

    table.insert(self.Elements,frame)
    return {SetText=function(t) box.Text=t end}
end

-- Color Picker (Basic RGB sliders)
function AscensionHub.Tab:CreateColorPicker(text,default,callback)
    local state=default or {r=255,g=255,b=255}
    local frame=Instance.new("Frame") frame.Size=UDim2.new(0,250*AscensionHub.Settings.ScaleFactor,0,160*AscensionHub.Settings.ScaleFactor)
    frame.Position=UDim2.new(0,10*AscensionHub.Settings.ScaleFactor,0,#self.Elements*55*AscensionHub.Settings.ScaleFactor)
    frame.BackgroundTransparency=1 frame.Parent=self.Content

    local label=Instance.new("TextLabel") label.Text=text; label.TextColor3=self.Theme.TextColor
    label.Font=self.Theme.Font; label.TextSize=14*AscensionHub.Settings.ScaleFactor*AscensionHub.Settings.Accessibility.FontSizeScale
    label.Size=UDim2.new(1,0,0,20); label.BackgroundTransparency=1; label.Parent=frame

    local preview=Instance.new("Frame")
    preview.Size=UDim2.new(1,-20,0,40); preview.Position=UDim2.new(0,10,0,25)
    preview.BackgroundColor3=Color3.fromRGB(state.r,state.g,state.b)
    applyCornerRadius(preview); preview.Parent=frame

    local function makeSlider(channel,y)
        return self:CreateSlider(channel,0,255,state[channel:lower()],function(val)
            state[channel:lower()]=math.floor(val)
            preview.BackgroundColor3=Color3.fromRGB(state.r,state.g,state.b)
            safeCallback(callback,Color3.fromRGB(state.r,state.g,state.b))
        end)
    end
    makeSlider("R",75); makeSlider("G",115); makeSlider("B",155)

    table.insert(self.Elements,frame)
    return {SetColor=function(c) state=c; preview.BackgroundColor3=c end}
end

return AscensionHub
