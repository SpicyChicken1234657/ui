local AscensionHub = {}
AscensionHub.__index = AscensionHub

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Default Theme (Enhanced with Gradient and Glassmorphism)
AscensionHub.Theme = {
    WindowBackground = {
        Color = Color3.fromRGB(25, 25, 35),
        Transparency = 0.2
    },
    TitleBarColor = {
        Color = Color3.fromRGB(40, 40, 60),
        Transparency = 0.15
    },
    AccentColor = Color3.fromRGB(0, 150, 255),
    TextColor = Color3.fromRGB(230, 230, 245),
    ButtonColor = {
        Color = Color3.fromRGB(50, 50, 70),
        Transparency = 0.2
    },
    Font = Enum.Font.GothamBold,
    ShadowColor = Color3.fromRGB(0, 0, 0),
    CornerRadius = UDim.new(0, 10)
}

-- Settings
AscensionHub.Settings = {
    AnimationsEnabled = true,
    AnimationSpeed = 0.25,
    ScaleFactor = 1.0 -- For responsive design
}

-- Utility Functions
local function createGradient(frame, color1, color2)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{color1, color2}
    gradient.Parent = frame
end

local function createRippleEffect(button)
    local ripple = Instance.new("ImageLabel")
    ripple.Image = "rbxassetid://5028857472" -- Circular ripple effect
    ripple.ImageColor3 = AscensionHub.Theme.AccentColor
    ripple.Size = UDim2.new(0, 0, 0, 0)
    ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
    ripple.AnchorPoint = Vector2.new(0.5, 0.5)
    ripple.BackgroundTransparency = 1
    ripple.Parent = button
    ripple.ZIndex = button.ZIndex + 1
    
    local tween = TweenService:Create(ripple, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Size = UDim2.new(2, 0, 2, 0),
        ImageTransparency = 0.8
    })
    tween:Play()
    tween.Completed:Connect(function()
        ripple:Destroy()
    end)
end

local function applyCornerRadius(object)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = AscensionHub.Theme.CornerRadius
    corner.Parent = object
end

-- Window Creation
function AscensionHub:CreateWindow(title, customTheme)
    local window = setmetatable({}, {__index = AscensionHub.Window})
    window.Title = title
    window.Tabs = {}
    window.Visible = true
    window.Theme = customTheme or AscensionHub.Theme

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AscensionHub_" .. title
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false
    window.ScreenGui = screenGui

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 500 * AscensionHub.Settings.ScaleFactor, 0, 400 * AscensionHub.Settings.ScaleFactor)
    mainFrame.Position = UDim2.new(0.5, -250 * AscensionHub.Settings.ScaleFactor, 0.5, -200 * AscensionHub.Settings.ScaleFactor)
    mainFrame.BackgroundColor3 = window.Theme.WindowBackground.Color
    mainFrame.BackgroundTransparency = window.Theme.WindowBackground.Transparency
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui
    applyCornerRadius(mainFrame)
    createGradient(mainFrame, Color3.fromRGB(30, 30, 45), Color3.fromRGB(20, 20, 30))
    window.MainFrame = mainFrame

    local shadow = Instance.new("ImageLabel")
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = window.Theme.ShadowColor
    shadow.ImageTransparency = 0.6
    shadow.Size = UDim2.new(1, 60 * AscensionHub.Settings.ScaleFactor, 1, 60 * AscensionHub.Settings.ScaleFactor)
    shadow.Position = UDim2.new(0, -30 * AscensionHub.Settings.ScaleFactor, 0, -30 * AscensionHub.Settings.ScaleFactor)
    shadow.BackgroundTransparency = 1
    shadow.Parent = mainFrame

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 50 * AscensionHub.Settings.ScaleFactor)
    titleBar.BackgroundColor3 = window.Theme.TitleBarColor.Color
    titleBar.BackgroundTransparency = window.Theme.TitleBarColor.Transparency
    titleBar.Parent = mainFrame
    applyCornerRadius(titleBar)
    createGradient(titleBar, Color3.fromRGB(50, 50, 70), Color3.fromRGB(40, 40, 60))

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Text = "ðŸŒŒ " .. title
    titleLabel.TextColor3 = window.Theme.TextColor
    titleLabel.Font = window.Theme.Font
    titleLabel.TextSize = 18 * AscensionHub.Settings.ScaleFactor
    titleLabel.Size = UDim2.new(1, -120 * AscensionHub.Settings.ScaleFactor, 1, 0)
    titleLabel.Position = UDim2.new(0, 15 * AscensionHub.Settings.ScaleFactor, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = titleBar

    local closeButton = Instance.new("TextButton")
    closeButton.Text = "âœ–"
    closeButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    closeButton.BackgroundColor3 = Color3.fromRGB(80, 20, 20)
    closeButton.Size = UDim2.new(0, 40 * AscensionHub.Settings.ScaleFactor, 0, 40 * AscensionHub.Settings.ScaleFactor)
    closeButton.Position = UDim2.new(1, -45 * AscensionHub.Settings.ScaleFactor, 0, 5 * AscensionHub.Settings.ScaleFactor)
    closeButton.Font = window.Theme.Font
    closeButton.TextSize = 20 * AscensionHub.Settings.ScaleFactor
    applyCornerRadius(closeButton)
    closeButton.Parent = titleBar
    closeButton.MouseButton1Click:Connect(function()
        if AscensionHub.Settings.AnimationsEnabled then
            local tween = TweenService:Create(mainFrame, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Back), {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)})
            tween:Play()
            tween.Completed:Wait()
        end
        screenGui:Destroy()
    end)

    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(0, 130 * AscensionHub.Settings.ScaleFactor, 1, -50 * AscensionHub.Settings.ScaleFactor)
    tabContainer.Position = UDim2.new(0, 0, 0, 50 * AscensionHub.Settings.ScaleFactor)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame
    window.TabContainer = tabContainer

    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -130 * AscensionHub.Settings.ScaleFactor, 1, -50 * AscensionHub.Settings.ScaleFactor)
    contentFrame.Position = UDim2.new(0, 130 * AscensionHub.Settings.ScaleFactor, 0, 50 * AscensionHub.Settings.ScaleFactor)
    contentFrame.BackgroundTransparency = 0.3
    contentFrame.Parent = mainFrame
    applyCornerRadius(contentFrame)
    createGradient(contentFrame, Color3.fromRGB(30, 30, 50), Color3.fromRGB(20, 20, 40))
    window.ContentFrame = contentFrame

    local dragging, dragInput, startPos, startDrag
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            startPos = input.Position
            startDrag = mainFrame.Position
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - startPos
            mainFrame.Position = UDim2.new(startDrag.X.Scale, startDrag.X.Offset + delta.X, startDrag.Y.Scale, startDrag.Y.Offset + delta.Y)
        end
    end)
    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    return window
end

AscensionHub.Window = {}
AscensionHub.Window.__index = AscensionHub.Window

-- Tab Creation
function AscensionHub.Window:CreateTab(name)
    local tab = setmetatable({}, {__index = AscensionHub.Tab})
    tab.Name = name
    tab.Elements = {}

    local tabButton = Instance.new("TextButton")
    tabButton.Text = "ðŸ”§ " .. name
    tabButton.TextColor3 = self.Theme.TextColor
    tabButton.BackgroundColor3 = self.Theme.ButtonColor.Color
    tabButton.BackgroundTransparency = self.Theme.ButtonColor.Transparency
    tabButton.Size = UDim2.new(1, -10 * AscensionHub.Settings.ScaleFactor, 0, 45 * AscensionHub.Settings.ScaleFactor)
    tabButton.Position = UDim2.new(0, 5 * AscensionHub.Settings.ScaleFactor, 0, #self.Tabs * 50 * AscensionHub.Settings.ScaleFactor)
    tabButton.Font = self.Theme.Font
    tabButton.TextSize = 16 * AscensionHub.Settings.ScaleFactor
    applyCornerRadius(tabButton)
    tabButton.Parent = self.TabContainer
    tab.Button = tabButton

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -10 * AscensionHub.Settings.ScaleFactor, 1, -10 * AscensionHub.Settings.ScaleFactor)
    content.Position = UDim2.new(0, 5 * AscensionHub.Settings.ScaleFactor, 0, 5 * AscensionHub.Settings.ScaleFactor)
    content.BackgroundTransparency = 0.4
    content.Parent = self.ContentFrame
    content.Visible = #self.Tabs == 0
    applyCornerRadius(content)
    createGradient(content, Color3.fromRGB(35, 35, 55), Color3.fromRGB(25, 25, 45))
    tab.Content = content

    tabButton.MouseButton1Click:Connect(function()
        for _, t in pairs(self.Tabs) do
            t.Content.Visible = false
            if AscensionHub.Settings.AnimationsEnabled then
                TweenService:Create(t.Button, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Quad), {BackgroundColor3 = self.Theme.ButtonColor.Color, BackgroundTransparency = self.Theme.ButtonColor.Transparency + 0.1}):Play()
            end
        end
        content.Visible = true
        if AscensionHub.Settings.AnimationsEnabled then
            TweenService:Create(tabButton, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Quad), {BackgroundColor3 = self.Theme.AccentColor, BackgroundTransparency = 0.1}):Play()
        end
    end)

    table.insert(self.Tabs, tab)
    return tab
end

AscensionHub.Tab = {}
AscensionHub.Tab.__index = AscensionHub.Tab

-- Button Creation
function AscensionHub.Tab:CreateButton(text, callback)
    local button = Instance.new("TextButton")
    button.Text = "â–¶ " .. text
    button.TextColor3 = self.Theme.TextColor
    button.BackgroundColor3 = self.Theme.ButtonColor.Color
    button.BackgroundTransparency = self.Theme.ButtonColor.Transparency
    button.Size = UDim2.new(0, 220 * AscensionHub.Settings.ScaleFactor, 0, 45 * AscensionHub.Settings.ScaleFactor)
    button.Position = UDim2.new(0, 10 * AscensionHub.Settings.ScaleFactor, 0, #self.Elements * 50 * AscensionHub.Settings.ScaleFactor)
    button.Font = self.Theme.Font
    button.TextSize = 16 * AscensionHub.Settings.ScaleFactor
    applyCornerRadius(button)
    button.Parent = self.Content

    button.MouseButton1Click:Connect(function()
        if AscensionHub.Settings.AnimationsEnabled then
            createRippleEffect(button)
        end
        pcall(callback) -- Prevent crashes from bad callbacks
    end)

    if AscensionHub.Settings.AnimationsEnabled then
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Quad), {BackgroundColor3 = self.Theme.AccentColor, BackgroundTransparency = 0.15}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Quad), {BackgroundColor3 = self.Theme.ButtonColor.Color, BackgroundTransparency = self.Theme.ButtonColor.Transparency}):Play()
        end)
    end

    local btnObj = {
        SetText = function(newText) button.Text = "â–¶ " .. newText end,
        SetVisible = function(visible) button.Visible = visible end
    }
    table.insert(self.Elements, button)
    return btnObj
end

-- Slider Creation
function AscensionHub.Tab:CreateSlider(text, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0, 250 * AscensionHub.Settings.ScaleFactor, 0, 50 * AscensionHub.Settings.ScaleFactor)
    sliderFrame.Position = UDim2.new(0, 10 * AscensionHub.Settings.ScaleFactor, 0, #self.Elements * 55 * AscensionHub.Settings.ScaleFactor)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = self.Content

    local label = Instance.new("TextLabel")
    label.Text = text .. ": " .. default
    label.TextColor3 = self.Theme.TextColor
    label.Font = self.Theme.Font
    label.TextSize = 14 * AscensionHub.Settings.ScaleFactor
    label.Size = UDim2.new(1, 0, 0, 20 * AscensionHub.Settings.ScaleFactor)
    label.BackgroundTransparency = 1
    label.Parent = sliderFrame

    local track = Instance.new("Frame")
    track.Size = UDim2.new(1, 0, 0, 15 * AscensionHub.Settings.ScaleFactor)
    track.Position = UDim2.new(0, 0, 0, 25 * AscensionHub.Settings.ScaleFactor)
    track.BackgroundColor3 = self.Theme.ButtonColor.Color
    track.BackgroundTransparency = self.Theme.ButtonColor.Transparency + 0.2
    applyCornerRadius(track)
    track.Parent = sliderFrame

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = self.Theme.AccentColor
    applyCornerRadius(fill)
    fill.Parent = track

    local dragging = false
    track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)
    track.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local mouseX = input.Position.X
            local trackX = track.AbsolutePosition.X
            local trackWidth = track.AbsoluteSize.X
            local relative = math.clamp((mouseX - trackX) / trackWidth, 0, 1)
            local value = min + (max - min) * relative
            fill.Size = UDim2.new(relative, 0, 1, 0)
            label.Text = text .. ": " .. math.floor(value)
            pcall(callback, value)
        end
    end)

    table.insert(self.Elements, sliderFrame)
    return {SetValue = function(val) 
        local relative = (val - min) / (max - min)
        fill.Size = UDim2.new(relative, 0, 1, 0)
        label.Text = text .. ": " .. math.floor(val)
    end}
end

-- Dropdown Creation
function AscensionHub.Tab:CreateDropdown(text, options, callback)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(0, 250 * AscensionHub.Settings.ScaleFactor, 0, 50 * AscensionHub.Settings.ScaleFactor)
    dropdownFrame.Position = UDim2.new(0, 10 * AscensionHub.Settings.ScaleFactor, 0, #self.Elements * 55 * AscensionHub.Settings.ScaleFactor)
    dropdownFrame.BackgroundTransparency = 1
    dropdownFrame.Parent = self.Content

    local selectedLabel = Instance.new("TextButton")
    selectedLabel.Text = "â–¼ " .. text .. ": " .. options[1]
    selectedLabel.TextColor3 = self.Theme.TextColor
    selectedLabel.BackgroundColor3 = self.Theme.ButtonColor.Color
    selectedLabel.BackgroundTransparency = self.Theme.ButtonColor.Transparency
    selectedLabel.Font = self.Theme.Font
    selectedLabel.TextSize = 14 * AscensionHub.Settings.ScaleFactor
    selectedLabel.Size = UDim2.new(1, 0, 0, 50 * AscensionHub.Settings.ScaleFactor)
    applyCornerRadius(selectedLabel)
    selectedLabel.Parent = dropdownFrame

    local optionFrame = Instance.new("Frame")
    optionFrame.Size = UDim2.new(1, 0, 0, 0)
    optionFrame.Position = UDim2.new(0, 0, 0, 50 * AscensionHub.Settings.ScaleFactor)
    optionFrame.BackgroundColor3 = self.Theme.ButtonColor.Color
    optionFrame.BackgroundTransparency = self.Theme.ButtonColor.Transparency + 0.1
    optionFrame.ClipsDescendants = true
    optionFrame.Visible = false
    applyCornerRadius(optionFrame)
    optionFrame.Parent = dropdownFrame

    local isOpen = false
    selectedLabel.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        if AscensionHub.Settings.AnimationsEnabled then
            TweenService:Create(optionFrame, TweenInfo.new(AscensionHub.Settings.AnimationSpeed, Enum.EasingStyle.Elastic), {
                Size = UDim2.new(1, 0, 0, isOpen and #options * 40 * AscensionHub.Settings.ScaleFactor or 0)
            }):Play()
        else
            optionFrame.Size = UDim2.new(1, 0, 0, isOpen and #options * 40 * AscensionHub.Settings.ScaleFactor or 0)
        end
        optionFrame.Visible = isOpen
    end)

    for i, option in pairs(options) do
        local optButton = Instance.new("TextButton")
        optButton.Text = "âž¤ " .. option
        optButton.TextColor3 = self.Theme.TextColor
        optButton.BackgroundColor3 = self.Theme.ButtonColor.Color
        optButton.BackgroundTransparency = self.Theme.ButtonColor.Transparency + 0.2
        optButton.Size = UDim2.new(1, -10 * AscensionHub.Settings.ScaleFactor, 0, 40 * AscensionHub.Settings.ScaleFactor)
        optButton.Position = UDim2.new(0, 5 * AscensionHub.Settings.ScaleFactor, 0, (i-1) * 40 * AscensionHub.Settings.ScaleFactor)
        optButton.Font = self.Theme.Font
        optButton.TextSize = 14 * AscensionHub.Settings.ScaleFactor
        applyCornerRadius(optButton)
        optButton.Parent = optionFrame
        optButton.MouseButton1Click:Connect(function()
            selectedLabel.Text = "â–¼ " .. text .. ": " .. option
            isOpen = false
            optionFrame.Visible = false
            optionFrame.Size = UDim2.new(1, 0, 0, 0)
            pcall(callback, option)
        end)
    end

    table.insert(self.Elements, dropdownFrame)
    return {SetSelected = function(opt) selectedLabel.Text = "â–¼ " .. text .. ": " .. opt end}
end

return AscensionHub
